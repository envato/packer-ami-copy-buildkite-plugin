#!/bin/bash

set -eu -o pipefail

# Reads either a value or a list from plugin config
function plugin_read_list() {
  local prefix="BUILDKITE_PLUGIN_PACKER_AMI_COPY_$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

env_vars=()
env_vars+=("--env SECURITY_GROUP_ID=${PACKER_SECURITY_GROUP_ID}")
env_vars+=("--env SUBNET_ID=${PACKER_SUBNET_ID}")
env_vars+=("--env SSH_INTERFACE=${PACKER_SSH_INTERFACE}")
env_vars+=("--env IAM_INSTANCE_PROFILE=${PACKER_IAM_INSTANCE_PROFILE}")
# Set the rest of the user provided env vars
for e in $(plugin_read_list ENV_VARS); do
  env_vars+=("--env ${e}")
done

# Check that the template exists
template=$(plugin_read_list PACKER_TEMPLATE)
if [ ! -f "${template[0]}" ]; then
  echo "Error: ${template[0]} could not be found"
  exit 1
fi

# Validate packer commands
cmds=$(plugin_read_list PACKER_COMMANDS)
for cmd in ${cmds[@]}; do
  if [[ ! "${cmd}" =~ ^(build|fix|inspect|validate|version)$ ]]; then
    echo "Error: ${cmd} is not a valid packer command"
    exit 1
  fi
done

# Download artifacts
artifact_paths=$(plugin_read_list LOAD_ARTIFACTS)
for ap in ${artifact_paths[@]}; do
  buildkite-agent artifact download "${ap}" .
done

# Eval Prep commands

# explicit delcare required, because the array element count in the if predicate below
# generates an unbound variable error when the array is empty and 'set -u' is in play
declare -A prep_commands
prep_commands=$(plugin_read_list PREP_COMMANDS)
if [ "${#prep_commands[@]}" -ne 0 ]; then
  echo "--- Executing Prep Commands"
fi
for cmd in "${prep_commands[@]}"; do
    echo "${cmd}"
    eval "${cmd}"
done

# Execute packer commands
for cmd in ${cmds[@]}; do
  echo "--- :packer: ${cmd} ${template[0]}"
  docker run -it --rm ${env_vars[@]} -v "${PWD}":/workdir -w /workdir \
    "${ECR_ACCOUNT_ID}".dkr.ecr.us-east-1.amazonaws.com/"${DOCKER_IMAGE}" \
    "${cmd}" "${template[0]}"
done
